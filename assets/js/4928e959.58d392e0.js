"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[7576],{358:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(4848),i=t(8453);const o={title:"Editor Setup",description:"Setting your code editor"},s=void 0,l={id:"getting-started/editor-setup",title:"Editor Setup",description:"Setting your code editor",source:"@site/versioned_docs/version-0.21/getting-started/editor-setup.mdx",sourceDirName:"getting-started",slug:"/getting-started/editor-setup",permalink:"/docs/getting-started/editor-setup",draft:!1,unlisted:!1,editUrl:"https://google.com/versioned_docs/version-0.21/getting-started/editor-setup.mdx",tags:[],version:"0.21",frontMatter:{title:"Editor Setup",description:"Setting your code editor"},sidebar:"docs",previous:{title:"Examples",permalink:"/docs/getting-started/examples"},next:{title:"Concepts",permalink:"/docs/category/concepts"}},a={},c=[{value:"Add a template for creating components",id:"add-a-template-for-creating-components",level:2},{value:"JetBrains IDEs",id:"jetbrains-ides",level:3},{value:"VS Code",id:"vs-code",level:3},{value:"Support for the <code>html!</code> Macro",id:"support-for-the-html-macro",level:2},{value:"JetBrains IDEs",id:"jetbrains-ides-1",level:3},{value:"VS Code",id:"vs-code-1",level:3},{value:"Rust-Yew extension",id:"rust-yew-extension",level:4},{value:"Neovim",id:"neovim",level:3},{value:"Lazyvim",id:"lazyvim",level:4}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.admonition,{title:"contribute",type:"important",children:(0,r.jsx)(n.p,{children:"Using a different editor? Feel free to add instructions for your editor of choice."})}),"\n",(0,r.jsx)(n.h2,{id:"add-a-template-for-creating-components",children:"Add a template for creating components"}),"\n",(0,r.jsx)(n.h3,{id:"jetbrains-ides",children:"JetBrains IDEs"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Navigate to File | Settings | Editor | Live Templates."}),"\n",(0,r.jsx)(n.li,{children:"Select Rust and click on the + icon to add a new Live Template."}),"\n",(0,r.jsx)(n.li,{children:"Give it a name and description of your preference."}),"\n",(0,r.jsx)(n.li,{children:"Paste the following snippet(s) into the Template Text section."}),"\n",(0,r.jsx)(n.li,{children:"Change the applicability on the lower right, select Rust > Item > Module"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For function components, use the following template."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["(Optional) Click on Edit Variable and give ",(0,r.jsx)(n.code,{children:"tag"}),' a reasonable default value like "div", with double quotes.']}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",metastring:",ignore",children:"#[derive(PartialEq, Properties)]\r\npub struct $Name$Props {\r\n}\r\n\r\n#[function_component]\r\npub fn $Name$(props: &$Name$Props) -> Html {\r\n    html! {\r\n        <$tag$>$END$</$tag$>\r\n    }\r\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"For struct components, you can use the following more complicated template."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",metastring:",ignore",children:"struct $NAME$;\r\n\r\nenum $NAME$Msg {\r\n}\r\n\r\nimpl Component for $NAME$ {\r\n    type Message = $NAME$Msg;\r\n    type Properties = ();\r\n\r\n    fn create(ctx: &Context<Self>) -> Self {\r\n        Self\r\n    }\r\n\r\n    fn view(&self, ctx: &Context<Self>) -> Html {\r\n        html! {\r\n            $HTML$\r\n        }\r\n    }\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vs-code",children:"VS Code"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Navigate to File > Preferences > User Snippets."}),"\n",(0,r.jsx)(n.li,{children:"Select Rust as the language."}),"\n",(0,r.jsx)(n.li,{children:"Add the following snippet in the snippet JSON file:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n    "New Yew function component": {\r\n        "prefix": "yewfc",\r\n        "body": [\r\n            "#[derive(PartialEq, Properties)]",\r\n            "pub struct ${1:ComponentName}Props {}",\r\n            "",\r\n            "#[function_component]",\r\n            "pub fn $1(props: &${1}Props) -> Html {",\r\n            "    let ${1}Props {} = props;",\r\n            "    html! {",\r\n            "        <${2:div}>$0</${2}>",\r\n            "    }",\r\n            "}"\r\n        ],\r\n        "description": "Create a minimal Yew function component"\r\n    },\r\n    "New Yew struct component": {\r\n        "prefix": "yewsc",\r\n        "body": [\r\n            "pub struct ${1:ComponentName};",\r\n            "",\r\n            "pub enum ${1}Msg {",\r\n            "}",\r\n            "",\r\n            "impl Component for ${1} {",\r\n            "    type Message = ${1}Msg;",\r\n            "    type Properties = ();",\r\n            "",\r\n            "    fn create(ctx: &Context<Self>) -> Self {",\r\n            "        Self",\r\n            "    }",\r\n            "",\r\n            "    fn view(&self, ctx: &Context<Self>) -> Html {",\r\n            "        html! {",\r\n            "            $0",\r\n            "        }",\r\n            "    }",\r\n            "}"\r\n        ],\r\n        "description": "Create a new Yew component with a message enum"\r\n    }\r\n}\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"support-for-the-html-macro",children:["Support for the ",(0,r.jsx)(n.code,{children:"html!"})," Macro"]}),"\n",(0,r.jsx)(n.h3,{id:"jetbrains-ides-1",children:"JetBrains IDEs"}),"\n",(0,r.jsxs)(n.p,{children:["JetBrains added experimental support for proc-macro expansion in April 2021.\r\nThis feature must be enabled before it can be used.\r\n",(0,r.jsx)(n.a,{href:"https://blog.jetbrains.com/rust/2021/04/08/intellij-rust-updates-for-2021-1/#proc-macros",children:"See the blog post here."})]}),"\n",(0,r.jsx)(n.p,{children:"This still won't enable HTML autofill and formatting help, although it will enable variable resolution for\r\ncomponent names and attributes inside the macro.\r\nUtilities like Rename, Go to Declaration, Find Usages will work inside the macro."}),"\n",(0,r.jsx)(n.h3,{id:"vs-code-1",children:"VS Code"}),"\n",(0,r.jsx)(n.h4,{id:"rust-yew-extension",children:"Rust-Yew extension"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["This is a ",(0,r.jsx)(n.strong,{children:"work in progress"}),", and ",(0,r.jsx)(n.strong,{children:"community maintained"})," project! ",(0,r.jsx)(n.a,{href:"https://github.com/TechTheAwesome/code-yew-server",children:"Please see details and direct related bug reports / issues / questions over to the extension's repository"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Rust-Yew extension is ",(0,r.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=TechTheAwesome.rust-yew",children:"avaliable on VSC Marketplace"}),", providing syntax highlight, renames, hover, and more."]}),"\n",(0,r.jsxs)(n.p,{children:["Emmet support should work out of the box, if not please fall back to editing the ",(0,r.jsx)(n.code,{children:"settings.json"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"emmet.includeLanguages": {\r\n    "rust": "html",\r\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"neovim",children:"Neovim"}),"\n",(0,r.jsx)(n.h4,{id:"lazyvim",children:"Lazyvim"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Below configuration works with ",(0,r.jsx)(n.a,{href:"https://www.lazyvim.org",children:"LazyVim"})," configuration and lazy.vim plugin, create a file in ",(0,r.jsx)(n.code,{children:"lua/plugins/nvim-lspconfig.lua"})," (or update your ",(0,r.jsx)(n.code,{children:"lspconfig"}),") with:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'return {\r\n  {\r\n    "neovim/nvim-lspconfig",\r\n    init_options = {\r\n      userLanguages = {\r\n        eelixir = "html-eex",\r\n        eruby = "erb",\r\n        rust = "html",\r\n      },\r\n    },\r\n  },\r\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var r=t(6540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);