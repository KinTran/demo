"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[8548],{7009:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>r});var t=s(4848),c=s(8453);const a={title:"Callbacks",description:"ComponentLink and Callbacks"},l=void 0,o={id:"concepts/components/callbacks",title:"Callbacks",description:"ComponentLink and Callbacks",source:"@site/versioned_docs/version-0.18.0/concepts/components/callbacks.mdx",sourceDirName:"concepts/components",slug:"/concepts/components/callbacks",permalink:"/demo/docs/0.18.0/concepts/components/callbacks",draft:!1,unlisted:!1,editUrl:"https://google.com/versioned_docs/version-0.18.0/concepts/components/callbacks.mdx",tags:[],version:"0.18.0",frontMatter:{title:"Callbacks",description:"ComponentLink and Callbacks"},sidebar:"docs",previous:{title:"Introduction",permalink:"/demo/docs/0.18.0/concepts/components/introduction"},next:{title:"Properties",permalink:"/demo/docs/0.18.0/concepts/components/properties"}},i={},r=[{value:"ComponentLink API",id:"componentlink-api",level:2},{value:"send_message",id:"send_message",level:3},{value:"send_message_batch",id:"send_message_batch",level:3},{value:"callback",id:"callback",level:3},{value:"batch_callback",id:"batch_callback",level:3},{value:"Callbacks",id:"callbacks",level:2},{value:"Relevant examples",id:"relevant-examples",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:'The component "link" is the mechanism through which components are able to create callbacks and update themselves.'}),"\n",(0,t.jsx)(n.h2,{id:"componentlink-api",children:"ComponentLink API"}),"\n",(0,t.jsx)(n.h3,{id:"send_message",children:"send_message"}),"\n",(0,t.jsxs)(n.p,{children:["Sends a message to the component.\r\nMessages are handled by the ",(0,t.jsx)(n.code,{children:"update"})," method which determines whether the component should re-render."]}),"\n",(0,t.jsx)(n.h3,{id:"send_message_batch",children:"send_message_batch"}),"\n",(0,t.jsxs)(n.p,{children:["Sends multiple messages to the component at the same time.\r\nThis is similar to ",(0,t.jsx)(n.code,{children:"send_message"})," but if any of the messages cause the ",(0,t.jsx)(n.code,{children:"update"})," method to return ",(0,t.jsx)(n.code,{children:"true"}),",\r\nthe component will re-render after all messages in the batch have been processed."]}),"\n",(0,t.jsx)(n.p,{children:"If the given vector is empty, this function doesn't do anything."}),"\n",(0,t.jsx)(n.h3,{id:"callback",children:"callback"}),"\n",(0,t.jsxs)(n.p,{children:["Create a callback that will send a message to the component when it is executed.\r\nUnder the hood, it will call ",(0,t.jsx)(n.code,{children:"send_message"})," with the message returned by the provided closure."]}),"\n",(0,t.jsxs)(n.p,{children:["There is a different method called ",(0,t.jsx)(n.code,{children:"callback_once"})," which accepts a ",(0,t.jsx)(n.code,{children:"FnOnce"})," instead of a ",(0,t.jsx)(n.code,{children:"Fn"}),".\r\nYou should use this with care though, as the resulting callback will panic if executed more than once."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'// Create a callback that accepts some text and sends it to the component as the `Msg::Text` message variant.\r\nlet cb = link.callback(|text: String| Msg::Text(text));\r\n\r\n// The previous line is needlessly verbose to make it clearer.\r\n// It can be simplified it to this:\r\nlet cb = link.callback(Msg::Text);\r\n\r\n// Will send `Msg::Text("Hello World!")` to the component.\r\ncb.emit("Hello World!".to_owned());\n'})}),"\n",(0,t.jsx)(n.h3,{id:"batch_callback",children:"batch_callback"}),"\n",(0,t.jsxs)(n.p,{children:["Create a callback that will send a batch of messages to the component when it is executed.\r\nThe difference to ",(0,t.jsx)(n.code,{children:"callback"})," is that the closure passed to this method doesn't have to return a message.\r\nInstead, the closure can return either ",(0,t.jsx)(n.code,{children:"Vec<Msg>"})," or ",(0,t.jsx)(n.code,{children:"Option<Msg>"})," where ",(0,t.jsx)(n.code,{children:"Msg"})," is the component's message type."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Vec<Msg>"})," is treated as a batch of messages and uses ",(0,t.jsx)(n.code,{children:"send_message_batch"})," under the hood."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Option<Msg>"})," calls ",(0,t.jsx)(n.code,{children:"send_message"})," if it is ",(0,t.jsx)(n.code,{children:"Some"}),". If the value is ",(0,t.jsx)(n.code,{children:"None"}),", nothing happens.\r\nThis can be used in cases where, depending on the situation, an update isn't required."]}),"\n",(0,t.jsxs)(n.p,{children:["This is achieved using the ",(0,t.jsx)(n.code,{children:"SendAsMessage"})," trait which is only implemented for these types.\r\nYou can implement ",(0,t.jsx)(n.code,{children:"SendAsMessage"})," for your own types which allows you to use them in ",(0,t.jsx)(n.code,{children:"batch_callback"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Like ",(0,t.jsx)(n.code,{children:"callback"}),", this method also has a ",(0,t.jsx)(n.code,{children:"FnOnce"})," counterpart, ",(0,t.jsx)(n.code,{children:"batch_callback_once"}),".\r\nThe same restrictions apply as for ",(0,t.jsx)(n.code,{children:"callback_once"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"callbacks",children:"Callbacks"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"(This might need its own short page.)"})}),"\n",(0,t.jsxs)(n.p,{children:["Callbacks are used to communicate with services, agents, and parent components within Yew.\r\nInternally their type is just ",(0,t.jsx)(n.code,{children:"Fn"})," wrapped in ",(0,t.jsx)(n.code,{children:"Rc"})," to allow them to be cloned."]}),"\n",(0,t.jsxs)(n.p,{children:["They have an ",(0,t.jsx)(n.code,{children:"emit"})," function that takes their ",(0,t.jsx)(n.code,{children:"<IN>"})," type as an argument and converts that to a message expected by its destination. If a callback from a parent is provided in props to a child component, the child can call ",(0,t.jsx)(n.code,{children:"emit"})," on the callback in its ",(0,t.jsx)(n.code,{children:"update"})," lifecycle hook to send a message back to its parent. Closures or Functions provided as props inside the ",(0,t.jsx)(n.code,{children:"html!"})," macro are automatically converted to Callbacks."]}),"\n",(0,t.jsx)(n.p,{children:"A simple use of a callback might look something like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'use yew::html;\r\n\r\nlet onclick = self.link.callback(|_| Msg::Clicked);\r\nhtml! {\r\n    <button onclick=onclick>{ "Click" }</button>\r\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The function passed to ",(0,t.jsx)(n.code,{children:"callback"})," must always take a parameter. For example, the ",(0,t.jsx)(n.code,{children:"onclick"})," handler requires a function which takes a parameter of type ",(0,t.jsx)(n.code,{children:"MouseEvent"}),". The handler can then decide what kind of message should be sent to the component. This message is scheduled for the next update loop unconditionally."]}),"\n",(0,t.jsxs)(n.p,{children:["If you need a callback that might not need to cause an update, use ",(0,t.jsx)(n.code,{children:"batch_callback"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'use yew::html;\r\n\r\nlet onkeypress = self.link.batch_callback(|event| {\r\n    if event.key() == "Enter" {\r\n        Some(Msg::Submit)\r\n    } else {\r\n        None\r\n    }\r\n});\r\n\r\nhtml! {\r\n    <input type="text" onkeypress=onkeypress />\r\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"relevant-examples",children:"Relevant examples"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/yewstack/yew/tree/v0.18/examples/counter",children:"Counter"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/yewstack/yew/tree/v0.18/examples/timer",children:"Timer"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var t=s(6540);const c={},a=t.createContext(c);function l(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:l(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);