"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[5669],{1750:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>u,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var t=n(4848),o=n(8453),s=n(1470),i=n(9365);const a={title:"Properties",description:"Parent to child communication"},l=void 0,c={id:"concepts/function-components/properties",title:"Properties",description:"Parent to child communication",source:"@site/docs/concepts/function-components/properties.mdx",sourceDirName:"concepts/function-components",slug:"/concepts/function-components/properties",permalink:"/docs/next/concepts/function-components/properties",draft:!1,unlisted:!1,editUrl:"https://google.com/docs/concepts/function-components/properties.mdx",tags:[],version:"current",frontMatter:{title:"Properties",description:"Parent to child communication"},sidebar:"docs",previous:{title:"Function Components",permalink:"/docs/next/concepts/function-components"},next:{title:"Callbacks",permalink:"/docs/next/concepts/function-components/callbacks"}},u={},d=[{value:"Reactivity",id:"reactivity",level:2},{value:"Derive macro",id:"derive-macro",level:2},{value:"Use in function components",id:"use-in-function-components",level:2},{value:"Derive macro field attributes",id:"derive-macro-field-attributes",level:2},{value:"Memory/speed overhead of using Properties",id:"memoryspeed-overhead-of-using-properties",level:2},{value:"Props macro",id:"props-macro",level:2},{value:"Automatically generate properties (yew-autoprops)",id:"automatically-generate-properties-yew-autoprops",level:2},{value:"Evaluation Order",id:"evaluation-order",level:2},{value:"Anti Patterns",id:"anti-patterns",level:2},{value:"yew-autoprops",id:"yew-autoprops",level:2}];function p(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.admonition,{type:"note",children:(0,t.jsx)(r.p,{children:'Properties are often shortened as "Props".'})}),"\n",(0,t.jsx)(r.p,{children:"Properties are essentially component arguments that Yew can keep watch on."}),"\n",(0,t.jsxs)(r.p,{children:["A type has to implement the ",(0,t.jsx)(r.code,{children:"Properties"})," trait before it can be used as the properties of a component."]}),"\n",(0,t.jsx)(r.h2,{id:"reactivity",children:"Reactivity"}),"\n",(0,t.jsx)(r.p,{children:"Yew checks if props have changed when reconciling the Virtual DOM during re-rendering, to know if nested components need to be re-rendered.\r\nThis way Yew can be considered a very reactive framework, as changes from the parent will always be propagated downward,\r\nand the view will never be out of sync with the data coming from props/state."}),"\n",(0,t.jsx)(r.admonition,{type:"tip",children:(0,t.jsxs)(r.p,{children:["If you have not yet completed the ",(0,t.jsx)(r.a,{href:"../../tutorial",children:"tutorial"}),", try it out and test this reactivity yourself!"]})}),"\n",(0,t.jsx)(r.h2,{id:"derive-macro",children:"Derive macro"}),"\n",(0,t.jsxs)(r.p,{children:["Yew provides a derive macro to easily implement the ",(0,t.jsx)(r.code,{children:"Properties"})," trait on structs."]}),"\n",(0,t.jsxs)(r.p,{children:["Types for which you derive ",(0,t.jsx)(r.code,{children:"Properties"})," must also implement ",(0,t.jsx)(r.code,{children:"PartialEq"})," so Yew can do data comparison."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-rust",children:"use yew::Properties;\r\n\r\n#[derive(Properties, PartialEq)]\r\npub struct Props {\r\n    pub is_loading: bool,\r\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"use-in-function-components",children:"Use in function components"}),"\n",(0,t.jsxs)(r.p,{children:["The attribute ",(0,t.jsx)(r.code,{children:"#[function_component]"})," allows to optionally receive Props in the function arguments. To supply them,\r\nthey are assigned via attributes in the ",(0,t.jsx)(r.code,{children:"html!"})," macro."]}),"\n",(0,t.jsxs)(s.A,{children:[(0,t.jsx)(i.A,{value:"with-props",label:"With Props",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-rust",children:'use yew::{function_component, html, Html, Properties};\r\n\r\n#[derive(Properties, PartialEq)]\r\npub struct Props {\r\n    pub is_loading: bool,\r\n}\r\n\r\n#[function_component]\r\nfn HelloWorld(&Props { is_loading }: &Props) -> Html {\r\n    html! { <>{"Am I loading? - "}{is_loading}</> }\r\n}\r\n\r\n// Then supply the prop\r\n#[function_component]\r\nfn App() -> Html {\r\n    html! { <HelloWorld is_loading=true /> }\r\n}\r\n\n'})})}),(0,t.jsx)(i.A,{value:"no-props",label:"No Props",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-rust",children:'use yew::{function_component, html, Html};\r\n\r\n#[function_component]\r\nfn HelloWorld() -> Html {\r\n    html! { "Hello world" }\r\n}\r\n\r\n// No props to supply\r\n#[function_component]\r\nfn App() -> Html {\r\n    html! { <HelloWorld /> }\r\n}\r\n\n'})})})]}),"\n",(0,t.jsx)(r.h2,{id:"derive-macro-field-attributes",children:"Derive macro field attributes"}),"\n",(0,t.jsxs)(r.p,{children:["When deriving ",(0,t.jsx)(r.code,{children:"Properties"})," all fields are required by default.\r\nThe following attributes allow you to give your props default values which will be used when the parent has not set them."]}),"\n",(0,t.jsx)(r.admonition,{type:"tip",children:(0,t.jsx)(r.p,{children:"Attributes aren't visible in Rustdoc generated documentation.\r\nThe doc strings of your properties should mention whether a prop is optional and if it has a special default value."})}),"\n",(0,t.jsxs)(s.A,{children:[(0,t.jsxs)(i.A,{value:"prop_or_default",label:"#[prop_or_default]",children:[(0,t.jsxs)(r.p,{children:["Initialize the prop value with the default value of the field's type using the ",(0,t.jsx)(r.code,{children:"Default"})," trait."]}),(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-rust",children:'use yew::{function_component, html, Html, Properties};\r\n\r\n#[derive(Properties, PartialEq)]\r\npub struct Props {\r\n    // highlight-start\r\n    #[prop_or_default]\r\n    // highlight-end\r\n    pub is_loading: bool,\r\n}\r\n\r\n#[function_component]\r\nfn HelloWorld(&Props { is_loading }: &Props) -> Html {\r\n    if is_loading {\r\n        html! { "Loading" }\r\n    } else {\r\n        html! { "Hello world" }\r\n    }\r\n}\r\n\r\n// Then use like this with default\r\n#[function_component]\r\nfn Case1() -> Html {\r\n    html! { <HelloWorld /> }\r\n}\r\n// Or no override the default\r\n#[function_component]\r\nfn Case2() -> Html {\r\n    html! { <HelloWorld is_loading=true /> }\r\n}\n'})})]}),(0,t.jsxs)(i.A,{value:"prop_or_value",label:"#[prop_or(value)]",children:[(0,t.jsxs)(r.p,{children:["Use ",(0,t.jsx)(r.code,{children:"value"})," to initialize the prop value. ",(0,t.jsx)(r.code,{children:"value"})," can be any expression that returns the field's type.\r\nFor example, to default a boolean prop to ",(0,t.jsx)(r.code,{children:"true"}),", use the attribute ",(0,t.jsx)(r.code,{children:"#[prop_or(true)]"}),". The expression\r\nis evaluated when the properties are constructed and no explicit value has been given."]}),(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-rust",children:'use yew::prelude::*;\r\n\r\n#[derive(Properties, PartialEq)]\r\npub struct Props {\r\n    #[prop_or_default]\r\n    pub is_loading: bool,\r\n    // highlight-start\r\n    #[prop_or(AttrValue::Static("Bob"))]\r\n    // highlight-end\r\n    pub name: AttrValue,\r\n}\r\n\r\n#[function_component]\r\nfn Hello(&Props { is_loading, ref name }: &Props) -> Html {\r\n    if is_loading {\r\n        html! { "Loading" }\r\n    } else {\r\n        html! { <>{"Hello "}{name} </>}\r\n    }\r\n}\r\n\r\n// Then use like this with default\r\n#[function_component]\r\nfn Case1() -> Html {\r\n    html! { <Hello /> }\r\n}\r\n// Or no override the default\r\n#[function_component]\r\nfn Case2() -> Html {\r\n    html! { <Hello name="Sam" /> }\r\n}\n'})})]}),(0,t.jsxs)(i.A,{value:"prop_or_else_function",label:"#[prop_or_else(function)]",children:[(0,t.jsxs)(r.p,{children:["Call ",(0,t.jsx)(r.code,{children:"function"})," to initialize the prop value. ",(0,t.jsx)(r.code,{children:"function"})," should have the signature ",(0,t.jsx)(r.code,{children:"FnMut() -> T"})," where ",(0,t.jsx)(r.code,{children:"T"})," is the field type.\r\nThe function is called when no explicit value has been given for that attribute."]}),(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-rust",children:'use yew::prelude::*;\r\n\r\nfn create_default_name() -> AttrValue {\r\n    AttrValue::Static("Bob")\r\n}\r\n\r\n#[derive(Properties, PartialEq)]\r\npub struct Props {\r\n    #[prop_or_default]\r\n    pub is_loading: bool,\r\n    // highlight-start\r\n    #[prop_or_else(create_default_name)]\r\n    // highlight-end\r\n    pub name: AttrValue,\r\n}\r\n\r\n#[function_component]\r\nfn Hello(&Props { is_loading, ref name }: &Props) -> Html {\r\n    if is_loading {\r\n        html! { "Loading" }\r\n    } else {\r\n        html! { <>{"Hello "}{name}</> }\r\n    }\r\n}\r\n\r\n// Then use like this with default\r\n#[function_component]\r\nfn Case1() -> Html {\r\n    html! { <Hello /> }\r\n}\r\n// Or no override the default\r\n#[function_component]\r\nfn Case2() -> Html {\r\n    html! { <Hello name="Sam" /> }\r\n}\n'})})]})]}),"\n",(0,t.jsx)(r.h2,{id:"memoryspeed-overhead-of-using-properties",children:"Memory/speed overhead of using Properties"}),"\n",(0,t.jsx)(r.p,{children:"Internally properties are reference counted. This means that only a shared pointer is passed down the component tree for props.\r\nIt saves us from the cost of having to clone the entire props, which might be expensive."}),"\n",(0,t.jsx)(r.admonition,{type:"tip",children:(0,t.jsxs)(r.p,{children:["Make use of ",(0,t.jsx)(r.code,{children:"AttrValue"})," which is our custom type for attribute values instead of defining them as String or another similar type."]})}),"\n",(0,t.jsx)(r.h2,{id:"props-macro",children:"Props macro"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"yew::props!"})," macro allows you to build properties the same way the ",(0,t.jsx)(r.code,{children:"html!"})," macro does it."]}),"\n",(0,t.jsxs)(r.p,{children:["The macro uses the same syntax as a struct expression except that you can't use attributes or a base expression (",(0,t.jsx)(r.code,{children:"Foo { ..base }"}),").\r\nThe type path can either point to the props directly (",(0,t.jsx)(r.code,{children:"path::to::Props"}),") or the associated properties of a component (",(0,t.jsx)(r.code,{children:"MyComp::Properties"}),")."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-rust",children:'use yew::prelude::*;\r\n\r\n#[derive(Properties, PartialEq)]\r\npub struct Props {\r\n    #[prop_or_default]\r\n    pub is_loading: bool,\r\n    #[prop_or(AttrValue::Static("Bob"))]\r\n    pub name: AttrValue,\r\n}\r\n\r\n#[function_component]\r\nfn Hello(&Props { is_loading, ref name }: &Props) -> Html {\r\n    if is_loading {\r\n        html! { "Loading" }\r\n    } else {\r\n        html! { <>{"Hello "}{name}</> }\r\n    }\r\n}\r\n\r\n#[function_component]\r\nfn App() -> Html {\r\n    // highlight-start\r\n    let pre_made_props = yew::props! {\r\n        Props {} // Notice we did not need to specify name prop\r\n    };\r\n    // highlight-end\r\n    html! { <Hello ..pre_made_props /> }\r\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"automatically-generate-properties-yew-autoprops",children:"Automatically generate properties (yew-autoprops)"}),"\n",(0,t.jsxs)(r.p,{children:["In order to streamline your development process, you can also use the macro\r\n",(0,t.jsx)(r.code,{children:"#[autoprops]"})," (from the crate ",(0,t.jsx)(r.code,{children:"yew-autoprops"}),") that will automatically\r\ngenerate the ",(0,t.jsx)(r.code,{children:"Properties"})," struct for you."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-rust",children:'use yew::prelude::*;\r\nuse yew_autoprops::autoprops;\r\n\r\n// the #[autoprops] macro must appear BEFORE #[function_component], the order matters\r\n#[autoprops]\r\n#[function_component]\r\nfn Greetings(\r\n    #[prop_or_default]\r\n    is_loading: bool,\r\n    #[prop_or(AttrValue::Static("Hello"))]\r\n    message: &AttrValue,\r\n    #[prop_or(AttrValue::Static("World"))]\r\n    name: &AttrValue,\r\n) -> Html {\r\n    if is_loading {\r\n        html! { "Loading" }\r\n    } else {\r\n        html! { <>{message}{" "}{name}</> }\r\n    }\r\n}\r\n\r\n// The properties struct "GreetingsProps" will be generated automatically.\r\n//\r\n// `is_loading` will be passed as value to the components while `message` and\r\n// `name` will use references because of the leading `&` in the definition.\n'})}),"\n",(0,t.jsx)(r.h2,{id:"evaluation-order",children:"Evaluation Order"}),"\n",(0,t.jsx)(r.p,{children:"Props are evaluated in the order they're specified, as shown by the following example:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-rust",children:"#[derive(yew::Properties, PartialEq)]\r\nstruct Props { first: usize, second: usize, last: usize }\r\n\r\nfn main() {\r\n    let mut g = 1..=3;\r\n    let props = yew::props!(Props { first: g.next().unwrap(), second: g.next().unwrap(), last: g.next().unwrap() });\r\n\r\n    assert_eq!(props.first, 1);\r\n    assert_eq!(props.second, 2);\r\n    assert_eq!(props.last, 3);\r\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"anti-patterns",children:"Anti Patterns"}),"\n",(0,t.jsx)(r.p,{children:"While almost any Rust type can be passed as properties, there are some anti-patterns that should be avoided.\r\nThese include, but are not limited to:"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["Using ",(0,t.jsx)(r.code,{children:"String"})," type instead of ",(0,t.jsx)(r.code,{children:"AttrValue"}),". ",(0,t.jsx)("br",{}),"\r\n",(0,t.jsx)(r.strong,{children:"Why is this bad?"})," ",(0,t.jsx)(r.code,{children:"String"})," can be expensive to clone.\r\nCloning is often needed when the prop value is used with hooks and callbacks. ",(0,t.jsx)(r.code,{children:"AttrValue"})," is either\r\na reference-counted string (",(0,t.jsx)(r.code,{children:"Rc<str>"}),") or a ",(0,t.jsx)(r.code,{children:"&'static str"}),", thus very cheap to clone.",(0,t.jsx)("br",{}),"\r\n",(0,t.jsx)(r.strong,{children:"Note"}),": ",(0,t.jsx)(r.code,{children:"AttrValue"})," internally is ",(0,t.jsx)(r.code,{children:"IString"})," from ",(0,t.jsx)(r.a,{href:"https://crates.io/crates/implicit-clone",children:"implicit-clone"}),"\r\nSee that crate to learn more."]}),"\n",(0,t.jsxs)(r.li,{children:["Using interior mutability. ",(0,t.jsx)("br",{}),"\r\n",(0,t.jsx)(r.strong,{children:"Why is this bad?"})," Interior mutability (such as with ",(0,t.jsx)(r.code,{children:"RefCell"}),", ",(0,t.jsx)(r.code,{children:"Mutex"}),", etc.) should\r\n",(0,t.jsx)(r.em,{children:"generally"})," be avoided. It can cause problems with re-renders (Yew doesn't know when the state has changed)\r\nso you may have to manually force a render. Like all things, it has its place. Use it with caution."]}),"\n",(0,t.jsxs)(r.li,{children:["Using ",(0,t.jsx)(r.code,{children:"Vec"})," type instead of ",(0,t.jsx)(r.code,{children:"IArray"}),". ",(0,t.jsx)("br",{}),"\r\n",(0,t.jsx)(r.strong,{children:"Why is this bad?"})," ",(0,t.jsx)(r.code,{children:"Vec"}),", just like ",(0,t.jsx)(r.code,{children:"String"}),", can also be expensive to clone. ",(0,t.jsx)(r.code,{children:"IArray"})," is either\r\na reference-counted slice (",(0,t.jsx)(r.code,{children:"Rc<T>"}),") or a ",(0,t.jsx)(r.code,{children:"&'static [T]"}),", thus very cheap to clone.",(0,t.jsx)("br",{}),"\r\n",(0,t.jsx)(r.strong,{children:"Note"}),": ",(0,t.jsx)(r.code,{children:"IArray"})," can be imported from ",(0,t.jsx)(r.a,{href:"https://crates.io/crates/implicit-clone",children:"implicit-clone"}),"\r\nSee that crate to learn more."]}),"\n",(0,t.jsx)(r.li,{children:"You tell us. Did you run into an edge-case you wish you knew about earlier? Feel free to create an issue\r\nor PR a fix to this documentation."}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"yew-autoprops",children:"yew-autoprops"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.a,{href:"https://crates.io/crates/yew-autoprops",children:"yew-autoprops"})," is an experimental package that allows one to create the Props struct on the fly out of the arguments of your function. Might be useful, if the properties struct is never reused."]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},9365:(e,r,n)=>{n.d(r,{A:()=>i});n(6540);var t=n(4164);const o={tabItem:"tabItem_Ymn6"};var s=n(4848);function i(e){let{children:r,hidden:n,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(o.tabItem,i),hidden:n,children:r})}},1470:(e,r,n)=>{n.d(r,{A:()=>w});var t=n(6540),o=n(4164),s=n(3104),i=n(6347),a=n(205),l=n(7485),c=n(1682),u=n(679);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:r,children:n}=e;return(0,t.useMemo)((()=>{const e=r??function(e){return d(e).map((e=>{let{props:{value:r,label:n,attributes:t,default:o}}=e;return{value:r,label:n,attributes:t,default:o}}))}(n);return function(e){const r=(0,c.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,n])}function h(e){let{value:r,tabValues:n}=e;return n.some((e=>e.value===r))}function m(e){let{queryString:r=!1,groupId:n}=e;const o=(0,i.W6)(),s=function(e){let{queryString:r=!1,groupId:n}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:r,groupId:n});return[(0,l.aZ)(s),(0,t.useCallback)((e=>{if(!s)return;const r=new URLSearchParams(o.location.search);r.set(s,e),o.replace({...o.location,search:r.toString()})}),[s,o])]}function f(e){const{defaultValue:r,queryString:n=!1,groupId:o}=e,s=p(e),[i,l]=(0,t.useState)((()=>function(e){let{defaultValue:r,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!h({value:r,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:r,tabValues:s}))),[c,d]=m({queryString:n,groupId:o}),[f,x]=function(e){let{groupId:r}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(r),[o,s]=(0,u.Dv)(n);return[o,(0,t.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:o}),g=(()=>{const e=c??f;return h({value:e,tabValues:s})?e:null})();(0,a.A)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),x(e)}),[d,x,s]),tabValues:s}}var x=n(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=n(4848);function b(e){let{className:r,block:n,selectedValue:t,selectValue:i,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const r=e.currentTarget,n=l.indexOf(r),o=a[n].value;o!==t&&(c(r),i(o))},d=e=>{let r=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;r=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;r=l[n]??l[l.length-1];break}}r?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},r),children:a.map((e=>{let{value:r,label:n,attributes:s}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:t===r?0:-1,"aria-selected":t===r,ref:e=>l.push(e),onKeyDown:d,onClick:u,...s,className:(0,o.A)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":t===r}),children:n??r},r)}))})}function j(e){let{lazy:r,children:n,selectedValue:s}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(r){const e=i.find((e=>e.props.value===s));return e?(0,t.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map(((e,r)=>(0,t.cloneElement)(e,{key:r,hidden:e.props.value!==s})))})}function y(e){const r=f(e);return(0,v.jsxs)("div",{className:(0,o.A)("tabs-container",g.tabList),children:[(0,v.jsx)(b,{...r,...e}),(0,v.jsx)(j,{...r,...e})]})}function w(e){const r=(0,x.A)();return(0,v.jsx)(y,{...e,children:d(e.children)},String(r))}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var t=n(6540);const o={},s=t.createContext(o);function i(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);