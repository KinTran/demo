"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[2866],{7035:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>l});var n=s(4848),r=s(8453);const d={title:"Project Setup",sidebar_label:"Introduction",description:"Set yourself up for success"},i=void 0,o={id:"getting-started/introduction",title:"Project Setup",description:"Set yourself up for success",source:"@site/versioned_docs/version-0.18.0/getting-started/introduction.mdx",sourceDirName:"getting-started",slug:"/getting-started/introduction",permalink:"/demo/zh-Hant/docs/0.18.0/getting-started/introduction",draft:!1,unlisted:!1,editUrl:"https://google.com/versioned_docs/version-0.18.0/getting-started/introduction.mdx",tags:[],version:"0.18.0",frontMatter:{title:"Project Setup",sidebar_label:"Introduction",description:"Set yourself up for success"},sidebar:"docs",next:{title:"Using trunk",permalink:"/demo/zh-Hant/docs/0.18.0/getting-started/project-setup/using-trunk"}},c={},l=[{value:"Rust",id:"rust",level:2},{value:"<strong>Wasm Build Tools</strong>",id:"wasm-build-tools",level:2},{value:"<strong><code>trunk</code></strong>",id:"trunk",level:3},{value:"<strong><code>wasm-pack</code></strong>",id:"wasm-pack",level:3},{value:"<strong><code>cargo-web</code></strong>",id:"cargo-web",level:3},{value:"Comparison",id:"comparison",level:3}];function a(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"rust",children:"Rust"}),"\n",(0,n.jsxs)(t.p,{children:["First, you'll need Rust. To install Rust and the ",(0,n.jsx)(t.code,{children:"cargo"})," build tool, follow the ",(0,n.jsx)(t.a,{href:"https://www.rust-lang.org/tools/install",children:"official instructions"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["You also need to install the ",(0,n.jsx)(t.code,{children:"wasm32-unknown-unknown"})," target to compile Rust to Wasm.\r\nIf you're using rustup, you just need to run ",(0,n.jsx)(t.code,{children:"rustup target add wasm32-unknown-unknown"}),"."]}),"\n",(0,n.jsx)(t.admonition,{type:"important",children:(0,n.jsxs)(t.p,{children:["The minimum supported Rust version (MSRV) for Yew is ",(0,n.jsx)(t.code,{children:"1.49.0"}),". Older versions can cause unexpected issues accompanied by incomprehensible error messages.\r\nYou can check your toolchain version using ",(0,n.jsx)(t.code,{children:"rustup show"}),' (under "active toolchain") or alternatively ',(0,n.jsx)(t.code,{children:"rustc --version"}),". To update your toolchain, run ",(0,n.jsx)(t.code,{children:"rustup update"}),"."]})}),"\n",(0,n.jsx)(t.h2,{id:"wasm-build-tools",children:(0,n.jsx)(t.strong,{children:"Wasm Build Tools"})}),"\n",(0,n.jsxs)(t.p,{children:["Extra tooling is needed to facilitate the interop between WebAssembly and JavaScript. Additionally,\r\ndepending on the tool you choose, they can help make deployment and packaging much less of a\r\nheadache by generating all of the JavaScript code necessary to load and run your app's ",(0,n.jsx)(t.code,{children:".wasm"}),"\r\nbinary in a browser."]}),"\n",(0,n.jsx)(t.h3,{id:"trunk",children:(0,n.jsx)(t.a,{href:"https://github.com/thedodd/trunk/",children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"trunk"})})})}),"\n",(0,n.jsxs)(t.p,{children:["A tool practically made for building Yew apps.\r\nIt can build any ",(0,n.jsx)(t.code,{children:"wasm-bindgen"})," based app and its design is inspired by rollup.js.\r\nWith Trunk you don't need to have Node.js installed or touch any JavaScript code for that matter.\r\nIt can bundle assets for your app and even ships with a Sass compiler."]}),"\n",(0,n.jsx)(t.p,{children:"All of our examples are built with Trunk."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsxs)(t.a,{href:"/demo/zh-Hant/docs/0.18.0/getting-started/project-setup/using-trunk",children:["Getting started with ",(0,n.jsx)(t.code,{children:"trunk"})]})}),"\n",(0,n.jsx)(t.h3,{id:"wasm-pack",children:(0,n.jsx)(t.a,{href:"https://rustwasm.github.io/docs/wasm-pack/",children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"wasm-pack"})})})}),"\n",(0,n.jsxs)(t.p,{children:["A CLI tool developed by the Rust / Wasm Working Group for packaging up WebAssembly. Best used\r\ntogether with the ",(0,n.jsx)(t.a,{href:"https://github.com/wasm-tool/wasm-pack-plugin",children:(0,n.jsx)(t.code,{children:"wasm-pack-plugin"})})," for Webpack.\r\nThe primary purpose of ",(0,n.jsx)(t.code,{children:"wasm-pack"})," is building Wasm libraries for use in JavaScript.\r\nBecause of this, it can only build libraries and doesn't provide useful tools like a development server or automatic rebuilds."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsxs)(t.a,{href:"/demo/zh-Hant/docs/0.18.0/getting-started/project-setup/using-wasm-pack",children:["Get started with ",(0,n.jsx)(t.code,{children:"wasm-pack"})]})}),"\n",(0,n.jsx)(t.h3,{id:"cargo-web",children:(0,n.jsx)(t.a,{href:"https://github.com/koute/cargo-web",children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"cargo-web"})})})}),"\n",(0,n.jsxs)(t.p,{children:["This was the best preferred tool to use before the creation of ",(0,n.jsx)(t.code,{children:"wasm-bindgen"}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsxs)(t.a,{href:"/demo/zh-Hant/docs/0.18.0/getting-started/project-setup/using-cargo-web",children:["Getting started with ",(0,n.jsx)(t.code,{children:"cargo web"})]})}),"\n",(0,n.jsx)(t.h3,{id:"comparison",children:"Comparison"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{}),(0,n.jsx)(t.th,{children:(0,n.jsx)(t.code,{children:"trunk"})}),(0,n.jsx)(t.th,{children:(0,n.jsx)(t.code,{children:"wasm-pack"})}),(0,n.jsx)(t.th,{children:(0,n.jsx)(t.code,{children:"cargo-web"})})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Project Status"}),(0,n.jsx)(t.td,{children:"Actively maintained"}),(0,n.jsxs)(t.td,{children:["Actively maintained by the ",(0,n.jsx)(t.a,{href:"https://rustwasm.github.io",children:"Rust / Wasm Working Group"})]}),(0,n.jsx)(t.td,{children:"No Github activity for over 6 months"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Dev Experience"}),(0,n.jsx)(t.td,{children:"Just works! Batteries included, no external dependencies needed."}),(0,n.jsx)(t.td,{children:"Bare-bones. You'll need to write some scripts to streamline the experience or use the webpack plugin."}),(0,n.jsx)(t.td,{children:"Works great for code but needs separate asset pipeline."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Local Server"}),(0,n.jsx)(t.td,{children:"Supported"}),(0,n.jsx)(t.td,{children:"Only with webpack plugin"}),(0,n.jsx)(t.td,{children:"Supported"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Auto rebuild on local changes"}),(0,n.jsx)(t.td,{children:"Supported"}),(0,n.jsx)(t.td,{children:"Only with webpack plugin"}),(0,n.jsx)(t.td,{children:"Supported"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Asset handling"}),(0,n.jsx)(t.td,{children:"Supported"}),(0,n.jsx)(t.td,{children:"Only with webpack plugin"}),(0,n.jsx)(t.td,{children:"Static assets only"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Headless Browser Testing"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://github.com/thedodd/trunk/issues/20",children:"In Progress"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-pack/book/commands/test.html",children:"Supported"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://github.com/koute/cargo-web#features",children:"Supported"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Supported Targets"}),(0,n.jsx)(t.td,{children:(0,n.jsx)("ul",{children:(0,n.jsx)("li",{children:(0,n.jsx)("code",{children:"wasm32-unknown-unknown"})})})}),(0,n.jsx)(t.td,{children:(0,n.jsx)("ul",{children:(0,n.jsx)("li",{children:(0,n.jsx)("code",{children:"wasm32-unknown-unknown"})})})}),(0,n.jsx)(t.td,{children:(0,n.jsxs)("ul",{children:[" ",(0,n.jsx)("li",{children:(0,n.jsx)("code",{children:"wasm32-unknown-unknown"})})," ",(0,n.jsx)("li",{children:(0,n.jsx)("code",{children:"wasm32-unknown-emscripten"})})," ",(0,n.jsx)("li",{children:(0,n.jsx)("code",{children:"asmjs-unknown-emscripten"})})," "]})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"web-sys"})}),(0,n.jsx)(t.td,{children:"Compatible"}),(0,n.jsx)(t.td,{children:"Compatible"}),(0,n.jsx)(t.td,{children:"Incompatible"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"stdweb"})}),(0,n.jsx)(t.td,{children:"Incompatible"}),(0,n.jsx)(t.td,{children:"Compatible"}),(0,n.jsx)(t.td,{children:"Compatible"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Example Usage"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/demo/zh-Hant/docs/0.18.0/getting-started/build-a-sample-app",children:"Sample app"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://github.com/yewstack/yew-wasm-pack-minimal",children:"Starter template"})}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.a,{href:"https://www.github.com/yewstack/yew/tree/v0.18/packages/yew-stdweb/examples",children:"Build script"})," for ",(0,n.jsx)(t.code,{children:"yew-stdweb"})," examples"]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>o});var n=s(6540);const r={},d=n.createContext(r);function i(e){const t=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(d.Provider,{value:t},e.children)}}}]);