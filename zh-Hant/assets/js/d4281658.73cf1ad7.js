"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[6411],{8659:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>a,frontMatter:()=>d,metadata:()=>c,toc:()=>i});var s=n(4848),r=n(8453);const d={title:"Events"},l=void 0,c={id:"concepts/html/events",title:"Events",description:"Introduction",source:"@site/versioned_docs/version-0.18.0/concepts/html/events.mdx",sourceDirName:"concepts/html",slug:"/concepts/html/events",permalink:"/zh-Hant/docs/0.18.0/concepts/html/events",draft:!1,unlisted:!1,editUrl:"https://google.com/versioned_docs/version-0.18.0/concepts/html/events.mdx",tags:[],version:"0.18.0",frontMatter:{title:"Events"},sidebar:"docs",previous:{title:"Elements",permalink:"/zh-Hant/docs/0.18.0/concepts/html/elements"},next:{title:"Classes",permalink:"/zh-Hant/docs/0.18.0/concepts/html/classes"}},h={},i=[{value:"Introduction",id:"introduction",level:2},{value:"Event Types",id:"event-types",level:2},{value:"<code>oninput</code> and <code>onchange</code>",id:"oninput-and-onchange",level:2},{value:"<code>oninput</code> using InputData",id:"oninput-using-inputdata",level:3},{value:"<code>onchange</code> using ChangeData",id:"onchange-using-changedata",level:3},{value:"Files",id:"files",level:4},{value:"Select",id:"select",level:4},{value:"Value",id:"value",level:4},{value:"Typed event target",id:"typed-event-target",level:2},{value:"Using <code>JsCast</code>",id:"using-jscast",level:3},{value:"Using <code>NodeRef</code>",id:"using-noderef",level:3},{value:"Manual event listener",id:"manual-event-listener",level:2},{value:"Using <code>Closure</code> (verbose)",id:"using-closure-verbose",level:3},{value:"Using <code>gloo</code> (concise)",id:"using-gloo-concise",level:3}];function o(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(t.p,{children:["Yew integrates with the ",(0,s.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/api/web_sys/",children:(0,s.jsx)(t.code,{children:"web-sys"})})," crate and\r\nuses the events from that crate. The ",(0,s.jsx)(t.a,{href:"#event-types",children:"table below"})," lists all of the ",(0,s.jsx)(t.code,{children:"web-sys"}),"\r\nevents that are accepted in the ",(0,s.jsx)(t.code,{children:"html!"})," macro."]}),"\n",(0,s.jsxs)(t.p,{children:["You can still add a ",(0,s.jsx)(t.a,{href:"/zh-Hant/docs/0.18.0/concepts/components/callbacks",children:(0,s.jsx)(t.code,{children:"Callback"})})," for an event that is not listed in the table\r\nbelow, see ",(0,s.jsx)(t.a,{href:"#manual-event-listener",children:"Manual event listener"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"event-types",children:"Event Types"}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["All the event types mentioned in the following table are re-exported under ",(0,s.jsx)(t.code,{children:"yew::events"}),".\r\nUsing the types from ",(0,s.jsx)(t.code,{children:"yew::events"})," makes it easier to ensure version compatibility than\r\nif you were to manually include ",(0,s.jsx)(t.code,{children:"web-sys"})," as a dependency in your crate because you won't\r\nend up using a version which conflicts with the version that Yew specifies."]})}),"\n",(0,s.jsxs)(t.p,{children:["The event listener name is the expected name when adding an event ",(0,s.jsx)(t.code,{children:"Callback"})," in the ",(0,s.jsx)(t.code,{children:"html"})," macro:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:'use yew::{html, Callback};\r\n\r\nhtml! {\r\n    <button onclick={Callback::from(|_| ())}>\r\n    //      ^^^^^^^ event listener name\r\n        { "Click me!" }\r\n    </button>\r\n};\n'})}),"\n",(0,s.jsxs)(t.p,{children:['The event name is the listener without the "on" prefix, therefore, the ',(0,s.jsx)(t.code,{children:"onclick"})," event listener\r\nlistens for ",(0,s.jsx)(t.code,{children:"click"})," events."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Event listener name"}),(0,s.jsxs)(t.th,{children:[(0,s.jsx)(t.code,{children:"web_sys"})," Event Type"]}),(0,s.jsxs)(t.th,{children:[(0,s.jsx)(t.code,{children:"stdweb"})," Event Type"]})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onabort"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.ResourceAbortEvent.html",children:"ResourceAbortEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onauxclick"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.MouseEvent.html",children:"MouseEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.AuxClickEvent.html",children:"AuxClickEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onblur"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.FocusEvent.html",children:"FocusEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.BlurEvent.html",children:"BlurEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oncancel"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oncanplay"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oncanplaythrough"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onchange"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/yew/latest/yew/events/enum.ChangeData.html",children:"ChangeData"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/yew-stdweb/latest/yew_stdweb/events/enum.ChangeData.html",children:"ChangeData"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onclick"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.MouseEvent.html",children:"MouseEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.ClickEvent.html",children:"ClickEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onclose"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oncontextmenu"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.MouseEvent.html",children:"MouseEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.ContextMenuEvent.html",children:"ContextMenuEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oncuechange"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ondblclick"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.MouseEvent.html",children:"MouseEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.DoubleClickEvent.html",children:"DoubleClickEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ondrag"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.DragEvent.html",children:"DragEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.DragEvent.html",children:"DragEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ondragend"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.DragEvent.html",children:"DragEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.DragEndEvent.html",children:"DragEndEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ondragenter"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.DragEvent.html",children:"DragEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.DragEnterEvent.html",children:"DragEnterEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ondragexit"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.DragEvent.html",children:"DragEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.DragExitEvent.html",children:"DragExitEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ondragleave"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.DragEvent.htmk",children:"DragEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.DragLeaveEvent.html",children:"DragLeaveEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ondragover"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.DragEvent.html",children:"DragEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.DragOverEvent.html",children:"DragOverEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ondragstart"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.DragEvent.html",children:"DragEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.DragStartEvent.html",children:"DragStartEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ondrop"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.DragEvent.html",children:"DragEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.DragDropEvent.html",children:"DragDropEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ondurationchange"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onemptied"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onended"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onerror"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.ResourceErrorEvent.html",children:"ResourceErrorEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onfocus"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.FocusEvent.html",children:"FocusEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.FocusEvent.html",children:"FocusEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onformdata"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oninput"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/yew/latest/yew/events/struct.InputData.html",children:"InputData"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/yew-stdweb/latest/yew_stdweb/events/struct.InputData.html",children:"InputData"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oninvalid"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onkeydown"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.KeyboardEvent.html",children:"KeyboardEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.KeyDownEvent.html",children:"KeyDownEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onkeypress"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.KeyboardEvent.html",children:"KeyboardEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.KeyPressEvent.html",children:"KeyPressEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onkeyup"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.KeyboardEvent.html",children:"KeyboardEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.KeyUpEvent.html",children:"KeyUpEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onload"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.ResourceLoadEvent.html",children:"ResourceLoadEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onloadeddata"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onloadedmetadata"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onloadstart"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.ProgressEvent.html",children:"ProgressEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.LoadStartEvent.html",children:"LoadStartEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onmousedown"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.MouseEvent.html",children:"MouseEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.MouseDownEvent.html",children:"MouseDownEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onmouseenter"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.MouseEvent.html",children:"MouseEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.MouseEnterEvent.html",children:"MouseEnterEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onmouseleave"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.MouseEvent.html",children:"MouseEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.MouseLeaveEvent.html",children:"MouseLeaveEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onmousemove"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.MouseEvent.html",children:"MouseEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.MouseMoveEvent.html",children:"MouseMoveEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onmouseout"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.MouseEvent.html",children:"MouseEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.MouseOutEvent.html",children:"MouseOutEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onmouseover"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.MouseEvent.html",children:"MouseEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.MouseOverEvent.html",children:"MouseOverEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onmouseup"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.MouseEvent.html",children:"MouseEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.MouseUpEvent.html",children:"MouseUpEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onpause"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onplay"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onplaying"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onprogress"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.ProgressEvent.html",children:"ProgressEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.ProgressEvent.html",children:"ProgressEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onratechange"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onreset"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onresize"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.ResizeEvent.html",children:"ResizeEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onscroll"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.ScrollEvent.html",children:"ScrollEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onsecuritypolicyviolation"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onseeked"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onseeking"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onselect"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onslotchange"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.SlotChangeEvent.html",children:"SlotChangeEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onstalled"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onsubmit"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.FocusEvent.html",children:"FocusEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.SubmitEvent.html",children:"SubmitEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onsuspend"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ontimeupdate"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ontoggle"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onvolumechange"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onwaiting"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onwheel"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.WheelEvent.html",children:"WheelEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.MouseWheelEvent.html",children:"MouseWheelEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oncopy"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"oncut"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onpaste"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onanimationcancel"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.AnimationEvent.html",children:"AnimationEvent"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onanimationend"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.AnimationEvent.html",children:"AnimationEvent"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onanimationiteration"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.AnimationEvent.html",children:"AnimationEvent"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onanimationstart"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.AnimationEvent.html",children:"AnimationEvent"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ongotpointercapture"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.PointerEvent.html",children:"PointerEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.GotPointerCaptureEvent.html",children:"GotPointerCaptureEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onloadend"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.ProgressEvent.html",children:"ProgressEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.LoadEndEvent.html",children:"LoadEndEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onlostpointercapture"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.PointerEvent.html",children:"PointerEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.LostPointerCaptureEvent.html",children:"LostPointerCaptureEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onpointercancel"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.PointerEvent.html",children:"PointerEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.PointerCancelEvent.html",children:"PointerCancelEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onpointerdown"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.PointerEvent.html",children:"PointerEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.PointerDownEvent.html",children:"PointerDownEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onpointerenter"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.PointerEvent.html",children:"PointerEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.PointerEnterEvent.html",children:"PointerEnterEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onpointerleave"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.PointerEvent.html",children:"PointerEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.PointerLeaveEvent.html",children:"PointerLeaveEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onpointerlockchange"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.PointerLockChangeEvent.html",children:"PointerLockChangeEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onpointerlockerror"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.PointerLockErrorEvent.html",children:"PointerLockErrorEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onpointermove"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.PointerEvent.html",children:"PointerEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.PointerMoveEvent.html",children:"PointerMoveEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onpointerout"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.PointerEvent.html",children:"PointerEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.PointerOutEvent.html",children:"PointerOutEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onpointerover"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.PointerEvent.html",children:"PointerEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.PointerOverEvent.html",children:"PointerOverEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onpointerup"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.PointerEvent.html",children:"PointerEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.PointerUpEvent.html",children:"PointerUpEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onselectionchange"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.SelectionChangeEvent.html",children:"SelectionChangeEvent"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onselectstart"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"onshow"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.Event.html",children:"Event"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ontouchcancel"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.TouchEvent.html",children:"TouchEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.TouchCancel.html",children:"TouchCancel"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ontouchend"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.TouchEvent.html",children:"TouchEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.TouchEnd.html",children:"TouchEnd"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ontouchmove"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.TouchEvent.html",children:"TouchEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.TouchMove.html",children:"TouchMove"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ontouchstart"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.TouchEvent.html",children:"TouchEvent"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/stdweb/latest/stdweb/web/event/struct.TouchStart.html",children:"TouchStart"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ontransitioncancel"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.TransitionEvent.html",children:"TransitionEvent"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ontransitionend"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.TransitionEvent.html",children:"TransitionEvent"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ontransitionrun"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.TransitionEvent.html",children:"TransitionEvent"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ontransitionstart"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.rs/web-sys/latest/web_sys/struct.TransitionEvent.html",children:"TransitionEvent"})}),(0,s.jsx)(t.td,{children:"Unsupported"})]})]})]}),"\n",(0,s.jsxs)(t.h2,{id:"oninput-and-onchange",children:[(0,s.jsx)(t.code,{children:"oninput"})," and ",(0,s.jsx)(t.code,{children:"onchange"})]}),"\n",(0,s.jsxs)(t.admonition,{type:"note",children:[(0,s.jsxs)(t.p,{children:["In the next version of Yew ",(0,s.jsx)(t.code,{children:"oninput"})," and ",(0,s.jsx)(t.code,{children:"onchange"})," ",(0,s.jsx)(t.code,{children:"Callback"}),"s will accept ",(0,s.jsx)(t.code,{children:"InputEvent"})," and ",(0,s.jsx)(t.code,{children:"Event"}),"\r\nrespectively."]}),(0,s.jsxs)(t.p,{children:["Yew will be removing ",(0,s.jsx)(t.code,{children:"InputData"})," and ",(0,s.jsx)(t.code,{children:"ChangeData"})," as they were too restrictive and could panic\r\nin certain circumstances."]})]}),"\n",(0,s.jsxs)(t.admonition,{type:"caution",children:[(0,s.jsxs)(t.p,{children:["You ",(0,s.jsx)(t.strong,{children:"must"})," apply the ",(0,s.jsx)(t.code,{children:"Callback"})," to the target element even though the ",(0,s.jsx)(t.code,{children:"InputEvent"}),"/",(0,s.jsx)(t.code,{children:"Event"}),"\r\nbubbles up, the ",(0,s.jsx)(t.code,{children:"InputData"}),"/",(0,s.jsx)(t.code,{children:"ChangeData"}),' is expecting the "target" to also be the "currentTarget"\r\n(see the caution in ',(0,s.jsx)(t.a,{href:"#typed-event-target",children:"Typed event target"})," section for more)."]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",metastring:',title="DO NOT DO THIS"',children:'use yew::{html, ChangeData, Html, InputData};\r\n\r\nenum Msg {\r\n    InputValue(String),\r\n}\r\n\r\n\r\nfn view(&self) -> Html {\r\n\r\n    let oninput = self.link.callback(|e: InputData| Msg::InputValue(e.value));\r\n    let onchange = self.link.batch_callback(|e: ChangeData| {\r\n        if let ChangeData::Value(value) = e {\r\n            Some(Msg::InputValue(value))\r\n        } else {\r\n            None\r\n        }\r\n    });\r\n\r\n    html! {\r\n        <div\r\n            // The `InputEvent` can bubble and then will read the text content\r\n            // of the div as the value in `InputData` which is not what you\'d\r\n            // expect!\r\n            //highlight-next-line\r\n            oninput={oninput}\r\n            // The `Event` can bubble and will cause a panic when it tries\r\n            // to create the `ChangeData` enum.\r\n            //highlight-next-line\r\n            onchange={onchange}\r\n        >\r\n            { "hi" }\r\n            <input type="text" />\r\n        </div>\r\n    }\r\n}\n'})})]}),"\n",(0,s.jsxs)(t.h3,{id:"oninput-using-inputdata",children:[(0,s.jsx)(t.code,{children:"oninput"})," using InputData"]}),"\n",(0,s.jsxs)(t.p,{children:["Yew wraps the ",(0,s.jsx)(t.code,{children:"InputEvent"})," in an ",(0,s.jsx)(t.code,{children:"InputData"})," type, the ",(0,s.jsx)(t.code,{children:"InputData"})," type also contains the current\r\n",(0,s.jsx)(t.code,{children:"value"})," of the element on which the ",(0,s.jsx)(t.code,{children:"oninput"})," handler is applied."]}),"\n",(0,s.jsxs)(t.p,{children:["Yew does this by trying to cast the element into an ",(0,s.jsx)(t.code,{children:"input"})," or ",(0,s.jsx)(t.code,{children:"textarea"})," element then calling their\r\nrespective ",(0,s.jsx)(t.code,{children:"value"})," getter method or it will get the text content of the element."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:"use yew::{html, Html, InputData};\r\n\r\nenum Msg {\r\n    InputValue(String),\r\n}\r\n\r\n\r\nfn view(&self) -> Html {\r\n\r\n    let oninput = self.link.callback(|e: InputData| Msg::InputValue(e.value));\r\n\r\n    html! {\r\n        <div>\r\n            <input oninput={oninput} />\r\n        </div>\r\n    }\r\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["If you want to get the value as a number (",(0,s.jsx)(t.code,{children:"f64"}),") then ",(0,s.jsx)(t.code,{children:"InputData"})," does have the ",(0,s.jsx)(t.code,{children:"event"})," field which is the\r\n",(0,s.jsx)(t.code,{children:"web_sys::InputEvent"})," that you can use with the information provided in the\r\n",(0,s.jsx)(t.a,{href:"#typed-event-target",children:"Typed event target"})," section and then you can call\r\n",(0,s.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.HtmlInputElement.html#method.value_as_number",children:(0,s.jsx)(t.code,{children:"value_as_number"})}),"\r\nmethod on the target."]}),"\n",(0,s.jsxs)(t.h3,{id:"onchange-using-changedata",children:[(0,s.jsx)(t.code,{children:"onchange"})," using ChangeData"]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"ChangeData"})," type is an enum which has a variant for the three supported element types:"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Variant name"}),(0,s.jsx)(t.th,{children:"Variant data type"}),(0,s.jsx)(t.th,{children:"Element type"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Files"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"web_sys::FileList"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"input"})," with type of ",(0,s.jsx)(t.code,{children:"file"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Select"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"web_sys::HtmlSelectElement"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"select"})," element"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Value"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"String"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"textarea"})," or ",(0,s.jsx)(t.code,{children:"input"})," with any type other than ",(0,s.jsx)(t.code,{children:"file"})]})]})]})]}),"\n",(0,s.jsxs)(t.p,{children:["If ",(0,s.jsx)(t.code,{children:"onchange"})," is used on any other element then the application ",(0,s.jsx)(t.strong,{children:"will panic"})," when Yew tries to\r\nconvert the ",(0,s.jsx)(t.code,{children:"Event"})," into ",(0,s.jsx)(t.code,{children:"ChangeData"}),"."]}),"\n",(0,s.jsx)(t.h4,{id:"files",children:"Files"}),"\n",(0,s.jsxs)(t.p,{children:["When a user has made a change to the files selected by an ",(0,s.jsx)(t.code,{children:"input"})," element with the type ",(0,s.jsx)(t.code,{children:"file"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:'use yew::{html, Html, ChangeData};\r\n\r\nfn view(&self) -> Html {\r\n\r\n    let onchange = self.link.batch_callback(|e| {\r\n        if let ChangeData::Files(files) = e {\r\n            // do something with web_sys::FileList\r\n        } else {\r\n            None\r\n        }\r\n    });\r\n\r\n    html! {\r\n        <div>\r\n            <input onchange={onchange} type="file" />\r\n        </div>\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["Use ",(0,s.jsx)(t.code,{children:"batch_callback"})," when you want to conditionally return a value from a ",(0,s.jsx)(t.code,{children:"Callback"}),"."]})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.em,{children:["see ",(0,s.jsx)(t.a,{href:"https://github.com/yewstack/yew/tree/v0.18/examples/file_upload",children:"file_upload"})," for a\r\nfull example."]})}),"\n",(0,s.jsx)(t.h4,{id:"select",children:"Select"}),"\n",(0,s.jsxs)(t.p,{children:["When a user has made a change to the ",(0,s.jsx)(t.code,{children:"select"})," element."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:'use yew::{html, Html, ChangeData};\r\n\r\nfn view(&self) -> Html {\r\n\r\n    let onchange = self.link.batch_callback(|e| {\r\n        if let ChangeData::Select(select) = e {\r\n            // do something with web_sys::HtmlSelectElement\r\n        } else {\r\n            None\r\n        }\r\n    });\r\n\r\n    html! {\r\n        <div>\r\n            <select onchange={onchange}>\r\n                <option value="English">{ "Hello!" }</option>\r\n                <option value="French">{ "Bonjour!" }</option>\r\n                <option value="German">{ "Guten Tag!" }</option>\r\n            </select>\r\n        </div>\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(t.h4,{id:"value",children:"Value"}),"\n",(0,s.jsxs)(t.p,{children:["When a user has made a change to a ",(0,s.jsx)(t.code,{children:"textarea"})," or ",(0,s.jsx)(t.code,{children:"input"})," element with any type other than ",(0,s.jsx)(t.code,{children:"file"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:"use yew::{html, Html, ChangeData};\r\n\r\nfn view(&self) -> Html {\r\n\r\n    let onchange = self.link.batch_callback(|e| {\r\n        if let ChangeData::Value(value) = e {\r\n            // do something with the String value\r\n        } else {\r\n            None\r\n        }\r\n    });\r\n\r\n    html! {\r\n        <div>\r\n            <textarea onchange={onchange} />\r\n        </div>\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.em,{children:["see ",(0,s.jsx)(t.a,{href:"https://github.com/yewstack/yew/tree/v0.18/examples/crm",children:"crm"})," for a\r\nfull example."]})}),"\n",(0,s.jsx)(t.h2,{id:"typed-event-target",children:"Typed event target"}),"\n",(0,s.jsxs)(t.admonition,{type:"caution",children:[(0,s.jsxs)(t.p,{children:["In this section ",(0,s.jsxs)(t.strong,{children:["target (",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Event/target",children:"Event.target"}),")"]}),"\r\nis always referring to the element at which the event was dispatched from."]}),(0,s.jsxs)(t.p,{children:["This will ",(0,s.jsx)(t.strong,{children:"not"})," always be the element at which the ",(0,s.jsx)(t.code,{children:"Callback"})," is placed, that is the\r\n",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget",children:"Event.currentTarget"})]})]}),"\n",(0,s.jsxs)(t.p,{children:["In event ",(0,s.jsx)(t.code,{children:"Callback"}),"s you may want to get the target of that event. For example, on the\r\n",(0,s.jsx)(t.code,{children:"input"})," event you may want to update some internal state."]}),"\n",(0,s.jsxs)(t.p,{children:["In Yew getting the target element in the correct type can be done in a couple of ways and we will go through\r\nthem here. Calling ",(0,s.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.Event.html#method.target",children:(0,s.jsx)(t.code,{children:"web_sys::Event::target"})}),"\r\non an event returns an optional ",(0,s.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.EventTarget.html",children:(0,s.jsx)(t.code,{children:"web_sys::EventTarget"})}),"\r\ntype, which might not seem very useful when you want to know the value of your input element."]}),"\n",(0,s.jsx)(t.p,{children:"In all the approaches below we are going to tackle the same problem, so it's clear where the approach\r\ndiffers opposed to the problem at hand."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"The Problem:"})}),"\n",(0,s.jsxs)(t.p,{children:["We have an ",(0,s.jsx)(t.code,{children:"oninput"})," ",(0,s.jsx)(t.code,{children:"Callback"})," on my ",(0,s.jsx)(t.code,{children:"<input>"})," element and each time it is invoked we want to send\r\nan ",(0,s.jsx)(t.a,{href:"/zh-Hant/docs/0.18.0/concepts/components/introduction#update",children:"update"})," ",(0,s.jsx)(t.code,{children:"Msg"})," to our component. We really want to get the value as a\r\nnumber or ",(0,s.jsx)(t.code,{children:"f64"})," for rust."]}),"\n",(0,s.jsxs)(t.p,{children:["Our ",(0,s.jsx)(t.code,{children:"Msg"})," enum looks like this:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:"pub enum Msg {\r\n    InputValue(f64),\r\n}\n"})}),"\n",(0,s.jsxs)(t.h3,{id:"using-jscast",children:["Using ",(0,s.jsx)(t.code,{children:"JsCast"})]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/api/wasm_bindgen/index.html",children:(0,s.jsx)(t.code,{children:"wasm-bindgen"})})," crate has\r\na useful trait; ",(0,s.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/api/wasm_bindgen/trait.JsCast.html",children:(0,s.jsx)(t.code,{children:"JsCast"})}),"\r\nwhich allows us to hop and skip our way to the type we want, as long as it implements ",(0,s.jsx)(t.code,{children:"JsCast"}),". We can\r\ndo this cautiously, which involves some runtime checks and failure types like ",(0,s.jsx)(t.code,{children:"Option"})," and ",(0,s.jsx)(t.code,{children:"Result"}),",\r\nor we can do it dangerously."]}),"\n",(0,s.jsx)(t.p,{children:"Enough talk, more code:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-toml",metastring:'title="Cargo.toml"',children:'[dependencies]\r\n# need wasm-bindgen for JsCast\r\nwasm-bindgen = "0.2"\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:'//highlight-next-line\r\nuse wasm_bindgen::JsCast;\r\nuse yew::{\r\n    html,\r\n    web_sys::{EventTarget, HtmlInputElement},\r\n    Component, ComponentLink, Html, InputData,\r\n};\r\n\r\npub struct Comp {\r\n    link: ComponentLink<Self>,\r\n}\r\n\r\npub enum Msg {\r\n    InputValue(f64),\r\n}\r\n\r\nimpl Component for Comp {\r\n    type Message = Msg;\r\n    type Properties = ();\r\n\r\n    fn create(_: Self::Properties, link: ComponentLink<Self>) -> Self {\r\n        Self { link }\r\n    }\r\n\r\n    fn update(&mut self, msg: Self::Message) -> yew::ShouldRender {\r\n        let Msg::InputValue(value) = msg;\r\n        // do something with value\r\n        todo!()\r\n    }\r\n\r\n    fn change(&mut self, _props: Self::Properties) -> yew::ShouldRender {\r\n        false\r\n    }\r\n\r\n    fn view(&self) -> Html {\r\n        let link = &self.link;\r\n\r\n        // Use batch_callback so if something unexpected happens we can return\r\n        // None and do nothing\r\n        let on_cautious_change = link.batch_callback(|e: InputData| {\r\n            let e = e.event;\r\n            // When events are created the target is undefined, it\'s only\r\n            // when dispatched does the target get added.\r\n            let target: Option<EventTarget> = e.target();\r\n            // Events can bubble so this listener might catch events from child\r\n            // elements which are not of type HtmlInputElement\r\n            //highlight-next-line\r\n            let input = target.and_then(|t| t.dyn_into::<HtmlInputElement>().ok());\r\n\r\n            input.map(|input| Msg::InputValue(input.value_as_number()))\r\n        });\r\n\r\n        let on_dangerous_change = link.callback(|e: InputData| {\r\n            let e = e.event;\r\n            let target: EventTarget = e\r\n                .target()\r\n                .expect("Event should have a target when dispatched");\r\n            // You must KNOW target is a HtmlInputElement, otherwise\r\n            // the call to value would be Undefined Behaviour (UB).\r\n            //highlight-start\r\n            Msg::InputValue(\r\n                target\r\n                    .unchecked_into::<HtmlInputElement>()\r\n                    .value_as_number(),\r\n            )\r\n            //highlight-end\r\n        });\r\n\r\n        html! {\r\n            <>\r\n                <label for="cautious-input">\r\n                    { "My cautious input:" }\r\n                    <input oninput={on_cautious_change}\r\n                        id="cautious-input"\r\n                        type="text"\r\n                    />\r\n                </label>\r\n                <label for="dangerous-input">\r\n                    { "My dangerous input:" }\r\n                    <input oninput={on_dangerous_change}\r\n                        id="dangerous-input"\r\n                        type="text"\r\n                    />\r\n                </label>\r\n            </>\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["Use ",(0,s.jsx)(t.code,{children:"batch_callback"})," when you want to conditionally return a value from a ",(0,s.jsx)(t.code,{children:"Callback"}),"."]})}),"\n",(0,s.jsxs)(t.p,{children:["The methods from ",(0,s.jsx)(t.code,{children:"JsCast"})," are ",(0,s.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/api/wasm_bindgen/trait.JsCast.html#method.dyn_into",children:(0,s.jsx)(t.code,{children:"dyn_into"})}),"\r\nand ",(0,s.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/api/wasm_bindgen/trait.JsCast.html#method.unchecked_into",children:(0,s.jsx)(t.code,{children:"unchecked_into"})}),"\r\nand you can probably see, they allowed\r\nus to go from ",(0,s.jsx)(t.code,{children:"EventTarget"})," to ",(0,s.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.HtmlInputElement.html",children:(0,s.jsx)(t.code,{children:"HtmlInputElement"})}),".\r\nThe ",(0,s.jsx)(t.code,{children:"dyn_into"})," method is cautious because at\r\nruntime it will check whether the type is actually a ",(0,s.jsx)(t.code,{children:"HtmlInputElement"})," and if not return an\r\n",(0,s.jsx)(t.code,{children:"Err(JsValue)"}),", the ",(0,s.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/api/wasm_bindgen/struct.JsValue.html",children:(0,s.jsx)(t.code,{children:"JsValue"})}),"\r\nis a catch-all type and is essentially giving you back the object to try again."]}),"\n",(0,s.jsxs)(t.p,{children:["At this point you might be thinking... when is the dangerous version ok to use? In the case above it\r\nis safe",(0,s.jsx)("sup",{children:"1"})," as we've set the ",(0,s.jsx)(t.code,{children:"Callback"})," on to an element with no children so the target can\r\nonly be that same element."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.em,{children:[(0,s.jsx)("sup",{children:"1"})," As safe as anything can be when JS land is involved."]})}),"\n",(0,s.jsxs)(t.h3,{id:"using-noderef",children:["Using ",(0,s.jsx)(t.code,{children:"NodeRef"})]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/zh-Hant/docs/0.18.0/concepts/components/refs",children:(0,s.jsx)(t.code,{children:"NodeRef"})})," can be used instead of querying the event given to a ",(0,s.jsx)(t.code,{children:"Callback"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:'//highlight-next-line\r\nuse yew::{html, web_sys::HtmlInputElement, Component, ComponentLink, Html, NodeRef};\r\n\r\npub struct Comp {\r\n    link: ComponentLink<Self>,\r\n    //highlight-next-line\r\n    my_input: NodeRef,\r\n}\r\n\r\npub enum Msg {\r\n    InputValue(f64),\r\n}\r\n\r\nimpl Component for Comp {\r\n    type Message = Msg;\r\n    type Properties = ();\r\n\r\n    fn create(_: Self::Properties, link: ComponentLink<Self>) -> Self {\r\n        Self {\r\n            link,\r\n            //highlight-next-line\r\n            my_input: NodeRef::default(),\r\n        }\r\n    }\r\n\r\n    fn update(&mut self, msg: Self::Message) -> yew::ShouldRender {\r\n        let Msg::InputValue(value) = msg;\r\n        // do something with value\r\n        todo!()\r\n    }\r\n\r\n    fn change(&mut self, _props: Self::Properties) -> yew::ShouldRender {\r\n        false\r\n    }\r\n\r\n    fn view(&self) -> Html {\r\n        let my_input_ref = self.my_input.clone();\r\n\r\n        let oninput = self.link.batch_callback(move |_| {\r\n            //highlight-next-line\r\n            let input = my_input_ref.cast::<HtmlInputElement>();\r\n\r\n            input.map(|input| Msg::InputValue(input.value_as_number()))\r\n        });\r\n\r\n        html! {\r\n            <>\r\n                <label for="my-input">\r\n                    { "My input:" }\r\n                    //highlight-next-line\r\n                    <input ref={self.my_input.clone()}\r\n                        oninput={oninput}\r\n                        id="my-input"\r\n                        type="text"\r\n                    />\r\n                </label>\r\n            </>\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Using ",(0,s.jsx)(t.code,{children:"NodeRef"}),", you can ignore the event and use the ",(0,s.jsx)(t.code,{children:"NodeRef::cast"})," method to get an\r\n",(0,s.jsx)(t.code,{children:"Option<HtmlInputElement>"})," - this is optional as calling ",(0,s.jsx)(t.code,{children:"cast"})," before the ",(0,s.jsx)(t.code,{children:"NodeRef"})," has been\r\nset, or when the type doesn't match will return ",(0,s.jsx)(t.code,{children:"None"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["You might also see by using ",(0,s.jsx)(t.code,{children:"NodeRef"})," we don't have to send the ",(0,s.jsx)(t.code,{children:"f64"})," back in the\r\n",(0,s.jsx)(t.code,{children:"Msg::InputValue"})," as we always have ",(0,s.jsx)(t.code,{children:"my_input"})," in the component state - so we could do the following:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:'use yew::{html, web_sys::HtmlInputElement, Component, ComponentLink, Html, NodeRef};\r\n\r\npub struct Comp {\r\n    link: ComponentLink<Self>,\r\n    my_input: NodeRef,\r\n}\r\n\r\npub enum Msg {\r\n    // Signal the input element has changed\r\n    //highlight-next-line\r\n    InputChanged,\r\n}\r\n\r\nimpl Component for Comp {\r\n    type Message = Msg;\r\n    type Properties = ();\r\n\r\n    fn create(_: Self::Properties, link: ComponentLink<Self>) -> Self {\r\n        Self {\r\n            link,\r\n            my_input: NodeRef::default(),\r\n        }\r\n    }\r\n\r\n    fn change(&mut self, _props: Self::Properties) -> yew::ShouldRender {\r\n        false\r\n    }\r\n\r\n    //highlight-start\r\n    fn update(&mut self, msg: Self::Message) -> bool {\r\n        match msg {\r\n            Msg::InputChanged => {\r\n                if let Some(input) = self.my_input.cast::<HtmlInputElement>() {\r\n                    let value = input.value_as_number();\r\n                    // do something with value\r\n\r\n                    true\r\n                } else {\r\n                    false\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //highlight-end\r\n\r\n    fn view(&self) -> Html {\r\n        //highlight-next-line\r\n        let oninput = self.link.callback(|_| Msg::InputChanged);\r\n\r\n        html! {\r\n            <label for="my-input">\r\n                { "My input:" }\r\n                <input ref={self.my_input.clone()}\r\n                    oninput={oninput}\r\n                    id="my-input"\r\n                    type="text"\r\n                />\r\n            </label>\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Which approach you take depends on your component and your preferences, there is no ",(0,s.jsx)(t.em,{children:"blessed"})," way\r\nper se."]}),"\n",(0,s.jsx)(t.h2,{id:"manual-event-listener",children:"Manual event listener"}),"\n",(0,s.jsxs)(t.p,{children:["You may want to listen to an event that is not supported by Yew's ",(0,s.jsx)(t.code,{children:"html"})," macro, see the\r\n",(0,s.jsx)(t.a,{href:"#event-types",children:"supported events listed here"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["In order to add an event listener to one of elements manually we need the help of\r\n",(0,s.jsx)(t.a,{href:"../components/refs",children:(0,s.jsx)(t.code,{children:"NodeRef"})})," so that in the ",(0,s.jsx)(t.code,{children:"rendered"})," method we can add a listener using the\r\n",(0,s.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/api/web_sys/index.html",children:(0,s.jsx)(t.code,{children:"web-sys"})})," and\r\n",(0,s.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/api/wasm_bindgen/index.html",children:"wasm-bindgen"})," API.\r\nWe do this in ",(0,s.jsx)(t.code,{children:"rendered"})," as this is the only time we can guarantee that the element exists in\r\nthe browser, Yew needs some time to create them after ",(0,s.jsx)(t.code,{children:"view"})," is called."]}),"\n",(0,s.jsxs)(t.p,{children:["The examples below are going to show adding listeners for the made-up ",(0,s.jsx)(t.code,{children:"custard"})," event. All events\r\neither unsupported by yew or custom can be represented as a\r\n",(0,s.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.Event.html",children:(0,s.jsx)(t.code,{children:"web_sys::Event"})}),". If you\r\nneed to access a specific method or field on a custom / unsupported event then you can use the\r\nmethods of ",(0,s.jsx)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/api/wasm_bindgen/trait.JsCast.html",children:(0,s.jsx)(t.code,{children:"JsCast"})}),"\r\nin order to convert to the type required."]}),"\n",(0,s.jsxs)(t.h3,{id:"using-closure-verbose",children:["Using ",(0,s.jsx)(t.code,{children:"Closure"})," (verbose)"]}),"\n",(0,s.jsxs)(t.p,{children:["Using the ",(0,s.jsx)(t.code,{children:"web-sys"})," and ",(0,s.jsx)(t.code,{children:"wasm-bindgen"})," API's directly for this can be a bit painful.. so brace\r\nyourself (",(0,s.jsxs)(t.a,{href:"#using-gloo-concise",children:["there is a more concise way thanks to ",(0,s.jsx)(t.code,{children:"gloo"})]}),")."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:'use wasm_bindgen::{prelude::Closure, JsCast};\r\nuse yew::{\r\n    html,\r\n    web_sys::{Event, HtmlElement},\r\n    Component, ComponentLink, Html, NodeRef,\r\n};\r\n\r\npub struct Comp {\r\n    link: ComponentLink<Self>,\r\n    my_div: NodeRef,\r\n    custard_listener: Option<Closure<dyn Fn(Event)>>,\r\n}\r\n\r\npub enum Msg {\r\n    Custard,\r\n}\r\n\r\nimpl Component for Comp {\r\n    type Message = Msg;\r\n    type Properties = ();\r\n\r\n    fn create(_: Self::Properties, link: ComponentLink<Self>) -> Self {\r\n        Self {\r\n            link,\r\n            my_div: NodeRef::default(),\r\n            custard_listener: None,\r\n        }\r\n    }\r\n\r\n    fn update(&mut self, msg: Self::Message) -> bool {\r\n        match msg {\r\n            Msg::Custard => {\r\n                // do something about custard..\r\n                true\r\n            }\r\n        }\r\n    }\r\n\r\n    fn change(&mut self, _props: Self::Properties) -> yew::ShouldRender {\r\n        false\r\n    }\r\n\r\n    fn view(&self) -> Html {\r\n        html! {\r\n            <div ref={self.my_div.clone()} id="my-div"></div>\r\n        }\r\n    }\r\n\r\n    fn rendered(&mut self, first_render: bool) {\r\n        if !first_render {\r\n            return;\r\n        }\r\n\r\n        if let Some(element) = self.my_div.cast::<HtmlElement>() {\r\n            // Create your Callback as you normally would\r\n            let oncustard = self.link.callback(|_: Event| Msg::Custard);\r\n\r\n            // Create a Closure from a Box<dyn Fn> - this has to be \'static\r\n            let listener =\r\n                Closure::<dyn Fn(Event)>::wrap(\r\n                    Box::new(move |e: Event| oncustard.emit(e))\r\n                );\r\n            element\r\n                .add_event_listener_with_callback(\r\n                    "custard",\r\n                    listener.as_ref().unchecked_ref()\r\n                )\r\n                .unwrap();\r\n\r\n            // Need to save listener in the component otherwise when the\r\n            // event is fired it will try and call the listener that no longer\r\n            // exists in memory!\r\n            self.custard_listener = Some(listener);\r\n        }\r\n    }\r\n\r\n    fn destroy(&mut self) {\r\n        // All done with the component but need to remove\r\n        // the event listener before the custard_listener memory\r\n        // goes out of scope.\r\n        if let (Some(element), Some(listener)) = (\r\n            self.my_div.cast::<HtmlElement>(),\r\n            self.custard_listener.take(),\r\n        ) {\r\n            element\r\n                .remove_event_listener_with_callback(\r\n                    "custard",\r\n                    listener.as_ref().unchecked_ref()\r\n                )\r\n                .unwrap();\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["For more information on ",(0,s.jsx)(t.code,{children:"Closures"}),", see\r\n",(0,s.jsxs)(t.a,{href:"https://rustwasm.github.io/wasm-bindgen/examples/closures.html",children:["The ",(0,s.jsx)(t.code,{children:"wasm-bindgen"})," Guide"]}),"."]}),"\n",(0,s.jsxs)(t.h3,{id:"using-gloo-concise",children:["Using ",(0,s.jsx)(t.code,{children:"gloo"})," (concise)"]}),"\n",(0,s.jsxs)(t.p,{children:["The easier way is with ",(0,s.jsx)(t.code,{children:"gloo"}),", more specifically ",(0,s.jsx)(t.a,{href:"https://docs.rs/gloo-events/0.1.1/gloo_events/index.html",children:(0,s.jsx)(t.code,{children:"gloo_events"})}),"\r\nwhich is an abstraction for ",(0,s.jsx)(t.code,{children:"web-sys"}),", ",(0,s.jsx)(t.code,{children:"wasm-bindgen"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"gloo_events"})," has the ",(0,s.jsx)(t.code,{children:"EventListener"})," type which can be used to create and store the\r\nevent listener."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-toml",metastring:'title="Cargo.toml"',children:'[dependencies]\r\ngloo-events = "0.1"\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:'use yew::{\r\n    html,\r\n    web_sys::{Event, HtmlElement},\r\n    Component, ComponentLink, Html, NodeRef,\r\n};\r\n\r\nuse gloo::events::EventListener;\r\n\r\npub struct Comp {\r\n    link: ComponentLink<Self>,\r\n    my_div: NodeRef,\r\n    custard_listener: Option<EventListener>,\r\n}\r\n\r\npub enum Msg {\r\n    Custard,\r\n}\r\n\r\nimpl Component for Comp {\r\n    type Message = Msg;\r\n    type Properties = ();\r\n\r\n    fn create(_: Self::Properties, link: ComponentLink<Self>) -> Self {\r\n        Self {\r\n            link,\r\n            my_div: NodeRef::default(),\r\n            custard_listener: None,\r\n        }\r\n    }\r\n\r\n    fn update(&mut self, msg: Self::Message) -> bool {\r\n        match msg {\r\n            Msg::Custard => {\r\n                // do something about custard..\r\n                true\r\n            }\r\n        }\r\n    }\r\n\r\n    fn change(&mut self, _props: Self::Properties) -> yew::ShouldRender {\r\n        false\r\n    }\r\n\r\n    fn view(&self) -> Html {\r\n        html! {\r\n            <div ref={self.my_div.clone()} id="my-div"></div>\r\n        }\r\n    }\r\n\r\n    fn rendered(&mut self, first_render: bool) {\r\n        if !first_render {\r\n            return;\r\n        }\r\n\r\n        if let Some(element) = self.my_div.cast::<HtmlElement>() {\r\n            // Create your Callback as you normally would\r\n            let oncustard = self.link.callback(|_: Event| Msg::Custard);\r\n\r\n            let listener =\r\n                EventListener::new(\r\n                    &element,\r\n                    "custard",\r\n                    move |e| oncustard.emit(e.clone())\r\n                );\r\n\r\n            self.custard_listener = Some(listener);\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Notice that when using an ",(0,s.jsx)(t.code,{children:"EventListener"})," you don't need to do anything when the\r\ncomponent is about to be destroyed as the ",(0,s.jsx)(t.code,{children:"EventListener"})," has a ",(0,s.jsx)(t.code,{children:"drop"})," implementation\r\nwhich will remove the event listener from the element."]}),"\n",(0,s.jsxs)(t.p,{children:["For more information on ",(0,s.jsx)(t.code,{children:"EventListener"}),", see the\r\n",(0,s.jsx)(t.a,{href:"https://docs.rs/gloo-events/0.1.1/gloo_events/struct.EventListener.html",children:"gloo_events docs.rs"}),"."]})]})}function a(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>c});var s=n(6540);const r={},d=s.createContext(r);function l(e){const t=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(d.Provider,{value:t},e.children)}}}]);