"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[1927],{5508:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var t=n(4848),s=n(8453);const o={title:"Children"},i=void 0,l={id:"concepts/components/children",title:"Children",description:"\u666e\u901a\u7528\u6cd5",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/version-0.18.0/concepts/components/children.mdx",sourceDirName:"concepts/components",slug:"/concepts/components/children",permalink:"/demo/zh-Hans/docs/0.18.0/concepts/components/children",draft:!1,unlisted:!1,editUrl:"https://google.com/versioned_docs/version-0.18.0/concepts/components/children.mdx",tags:[],version:"0.18.0",frontMatter:{title:"Children"},sidebar:"docs",previous:{title:"\u5c5e\u6027\uff08Properties\uff09",permalink:"/demo/zh-Hans/docs/0.18.0/concepts/components/properties"},next:{title:"Refs",permalink:"/demo/zh-Hans/docs/0.18.0/concepts/components/refs"}},c={},d=[{value:"\u666e\u901a\u7528\u6cd5",id:"\u666e\u901a\u7528\u6cd5",level:2},{value:"\u9ad8\u7ea7\u7528\u6cd5",id:"\u9ad8\u7ea7\u7528\u6cd5",level:2}];function p(r){const e={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...r.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"\u666e\u901a\u7528\u6cd5",children:"\u666e\u901a\u7528\u6cd5"}),"\n",(0,t.jsx)(e.p,{children:"*\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c*\u5728\u7ec4\u4ef6\u5185\u90e8\u5305\u542b\u6709 children \u65f6\uff0c\u60a8\u5e76\u4e0d\u5173\u5fc3\u7ec4\u4ef6\u5177\u4f53\u6709\u4ec0\u4e48\u7c7b\u578b\u7684 children\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u5c31\u8db3\u591f\u4e86\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",children:'use yew::prelude::*;\r\n\r\n#[derive(Properties, Clone)]\r\npub struct ListProps {\r\n    #[prop_or_default]\r\n    pub children: Children,\r\n}\r\n\r\npub struct List {\r\n    props: ListProps,\r\n}\r\n\r\nimpl Component for List {\r\n    type Properties = ListProps;\r\n    // ...\r\n\r\n    fn view(&self) -> Html {\r\n        html! {\r\n            <div class="list">\r\n                { for self.props.children.iter() }\r\n            </div>\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u9ad8\u7ea7\u7528\u6cd5",children:"\u9ad8\u7ea7\u7528\u6cd5"}),"\n",(0,t.jsxs)(e.p,{children:["\u5f53\u60a8\u5e0c\u671b\u5c06\u67d0\u4e00\u79cd\u7c7b\u578b\u7684\u7ec4\u4ef6\u4f5c\u4e3a children \u4f20\u9012\u7ed9\u60a8\u7684\u7ec4\u4ef6\u65f6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528",(0,t.jsx)(e.code,{children:"yew::html::ChildrenWithProps<T>"})," \u3002"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",children:'use yew::html::ChildrenWithProps;\r\nuse yew::prelude::*;\r\n\r\n// ...\r\n\r\n#[derive(Properties, Clone)]\r\npub struct ListProps {\r\n    #[prop_or_default]\r\n    pub children: ChildrenWithProps<Item>,\r\n}\r\n\r\npub struct List {\r\n    props: ListProps,\r\n}\r\n\r\nimpl Component for ListProps {\r\n    type Properties = ListProps;\r\n    // ...\r\n\r\n    fn view(&self) -> Html {\r\n        html! {\r\n            <div class="list">\r\n                { for self.props.children.iter() }\r\n            </div>\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u5f53\u7136\uff0c\u6709\u65f6\u60a8\u53ef\u80fd\u9700\u8981\u5c06 children \u9650\u5236\u4e3a\u51e0\u4e2a\u4e0d\u540c\u7684\u7ec4\u4ef6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u8981\u518d\u6df1\u5165\u4e00\u70b9 Yew\u3002"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.a,{href:"https://github.com/JelteF/derive_more",children:(0,t.jsx)(e.code,{children:"derive_more"})})," crate \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u975e\u5e38\u6709\u7528\u3002\u5982\u679c\u4f60\u4e0d\u60f3\u7528\u5b83\u7684\u8bdd, \u4f60\u9700\u8981\u624b\u52a8\u4e3a\u6bcf\u4e2a\u53d8\u91cf\u5b9e\u73b0 ",(0,t.jsx)(e.code,{children:"From"})," \u3002"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",children:'use yew::prelude::*;\r\nuse yew::html::ChildrenRenderer;\r\nuse yew::virtual_dom::{ VChild, VComp };\r\n\r\n// `derive_more::From` implements `From<VChild<Primary>>` and\r\n// `From<VChild<Secondary>>` for `Item` automatically!\r\n#[derive(Clone, derive_more::From)]\r\npub enum Item {\r\n    Primary(VChild<Primary>),\r\n    Secondary(VChild<Secondary>),\r\n}\r\n\r\n// Now, we implment `Into<Html>` so that yew knows how to render `Item`.\r\nimpl Into<Html> for Item {\r\n    fn into(self) -> Html {\r\n        match self {\r\n            Self::Primary(child) => child.into(),\r\n            Self::Secondary(child) => child.into(),\r\n        }\r\n    }\r\n}\r\n\r\n#[derive(Properties, Clone)]\r\npub struct ListProps {\r\n    #[prop_or_default]\r\n    pub children: ChildrenRenderer<Item>,\r\n}\r\n\r\npub struct List {\r\n    props: ListProps,\r\n}\r\n\r\nimpl Component for List {\r\n    type Properties = ListProps;\r\n    // ...\r\n\r\n    fn view(&self) -> Html {\r\n        html! {\r\n            <div class="list">\r\n                { for self.props.children.iter() }\r\n            </div>\r\n        }\r\n    }\r\n}\n'})})]})}function m(r={}){const{wrapper:e}={...(0,s.R)(),...r.components};return e?(0,t.jsx)(e,{...r,children:(0,t.jsx)(p,{...r})}):p(r)}},8453:(r,e,n)=>{n.d(e,{R:()=>i,x:()=>l});var t=n(6540);const s={},o=t.createContext(s);function i(r){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof r?r(e):{...e,...r}}),[e,r])}function l(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(s):r.components||s:i(r.components),t.createElement(o.Provider,{value:e},r.children)}}}]);